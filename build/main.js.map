{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["/*\n * Created with @iobroker/create-adapter v2.6.5\n */\n\n// The adapter-core module gives you access to the core ioBroker functions\n// you need to create an adapter\nimport * as utils from '@iobroker/adapter-core';\nimport type { NewsEntity, responseType, videosType } from './lib/types-d';\nimport { Library } from './lib/library';\nimport {\n    filterPartOfNews,\n    genericStateObjects,\n    newsChannel,\n    newsDefault,\n    statesObjects,\n    type statesObjectsType,\n} from './lib/definition';\nimport axios from 'axios';\naxios.defaults.timeout = 10000;\n\n// Load your modules here, e.g.:\n// import * as fs from \"fs\";\n\nclass Tagesschau extends utils.Adapter {\n    public library: Library;\n    private additionalConfig: { allTags: string[] } = { allTags: [] };\n    private updateTimeout: ioBroker.Timeout | undefined = undefined;\n    private topics = [\n        'inland',\n        'ausland',\n        'wirtschaft',\n        'sport',\n        'video',\n        'investigativ',\n        'wissen',\n    ] as (keyof typeof this.config)[];\n    private regions = '';\n\n    private breakingNewsDatapointExists = false;\n\n    private isOnline = false;\n    private warnedNotReachable = false;\n    private receivedNews: { [key: string]: NewsEntity[] } = {};\n\n    private scrollIntervals: { [key: string]: ioBroker.Interval | undefined } = {};\n\n    private homepageTimeout: ioBroker.Timeout | undefined = undefined;\n    public constructor(options: Partial<utils.AdapterOptions> = {}) {\n        super({\n            ...options,\n            name: 'tagesschau',\n        });\n        this.library = new Library(this);\n        this.on('ready', this.onReady.bind(this));\n        this.on('stateChange', this.onStateChange.bind(this));\n        // this.on('objectChange', this.onObjectChange.bind(this));\n        this.on('message', this.onMessage.bind(this));\n        this.on('unload', this.onUnload.bind(this));\n    }\n\n    /**\n     * Is called when databases are connected and adapter received configuration.....\n     */\n    private async onReady(): Promise<void> {\n        // 1=Baden-W\u00FCrttemberg, 2=Bayern, 3=Berlin, 4=Brandenburg, 5=Bremen, 6=Hamburg, 7=Hessen, 8=Mecklenburg-Vorpommern, 9=Niedersachsen, 10=Nordrhein-Westfalen, 11=Rheinland-Pfalz, 12=Saarland, 13=Sachsen, 14=Sachsen-Anhalt, 15=Schleswig-Holstein, 16=Th\u00FCringen\n        //  inland, ausland, wirtschaft, sport, video, investigativ, wissen.\n        this.log.info(\n            'Thanks for using this adapter. I hope you enjoy it! We not in hurry so please give me some time to get the news.',\n        );\n        await this.library.init();\n        await this.library.initStates(await this.getStatesAsync('*'));\n        await this.delay(500);\n        // Breaking News Homepage Datenpunkte anlegen\n        await this.library.writedp(`breakingNewsHomepageCount`, 0, genericStateObjects.breakingNewsCount);\n        const homepageData: { news?: any[]; newsCount: number } = { newsCount: 0, news: [] };\n        await this.library.writeFromJson(\n            `news.breakingNewsHomepage`,\n            `news.breakingNewsHomepage`,\n            statesObjects,\n            homepageData,\n            true,\n            true,\n        );\n\n        const maxRegions = 16;\n        const interval = this.config.interval * 60000;\n        this.config.interval =\n            (typeof this.config.interval !== 'number' || this.config.interval < 5 || this.config.interval > 100000\n                ? 30\n                : this.config.interval) * 60000;\n        const changed = interval !== this.config.interval;\n        this.log.info(\n            `${changed ? 'I' : 'You'} set the refresh interval to ${this.config.interval / 60000} minutes. ${changed ? 'Sorry, we have rules here!' : 'I am happy with that.'}`,\n        );\n\n        await this.extendForeignObjectAsync(this.namespace, {\n            type: 'meta',\n            common: { name: { en: 'Tagesschau Instance', de: 'Tagesschau Instanze' }, type: 'meta.folder' },\n            native: {},\n        });\n\n        for (let i = 1; i <= maxRegions; i++) {\n            const k = `L${i.toString()}` as keyof typeof this.config;\n            this.regions += this.config[k] === true ? (this.regions ? ',' : '') + i : '';\n        }\n        if (this.regions.length === 0 && this.config.newsEnabled) {\n            this.log.error('No regions selected! Adapter paused!');\n            return;\n        }\n\n        if (!this.config.maxEntries) {\n            this.config.maxEntries = 20;\n        }\n        if (!this.config.videosEnabled && !this.config.newsEnabled) {\n            this.log.error('Neither news nor video news activated! Adapter paused!');\n            return;\n        }\n        const topics = [\n            'inland',\n            'ausland',\n            'wirtschaft',\n            'sport',\n            'video',\n            'investigativ',\n            'wissen',\n        ] as (keyof typeof this.config)[];\n        this.topics = topics.filter(topic => this.config[topic] === true);\n        if (this.topics.length === 0 && this.config.newsEnabled) {\n            this.log.error('No topics selected! Adapter paused!');\n            return;\n        }\n        for (const topic of this.topics) {\n            await this.library.writedp(\n                `news.${topic}`,\n                undefined,\n                // @ts-expect-error\n                statesObjects.news[topic]._channel,\n            );\n            await this.library.writedp(`news.${topic}.controls.firstNewsAt`, 0, genericStateObjects.firstNewsAt);\n            await this.library.writedp(`news.${topic}.controls.scrollStep`, 5, genericStateObjects.scrollStep);\n            await this.library.writedp(\n                `news.${topic}.controls.scrollForward`,\n                false,\n                genericStateObjects.scrollForward,\n            );\n            await this.library.writedp(\n                `news.${topic}.controls.scrollBackward`,\n                false,\n                genericStateObjects.scrollBackward,\n            );\n            await this.library.writedp(\n                `news.${topic}.controls.autoScrollEnabled`,\n                false,\n                genericStateObjects.autoScrollEnabled,\n            );\n            await this.library.writedp(\n                `news.${topic}.controls.autoScrollInterval`,\n                30,\n                genericStateObjects.autoScrollInterval,\n            );\n            await this.subscribeStatesAsync(`news.${topic}.controls.*`);\n        }\n\n        await this.updateScrollIntervals(null, undefined);\n\n        // get all tags\n        const obj = await this.getForeignObjectAsync(this.namespace);\n        if (obj && obj.native && obj.native.additionalConfig) {\n            this.additionalConfig = obj.native.additionalConfig;\n        }\n\n        // check selected tags\n        if (!this.config.selectedTags) {\n            this.config.selectedTags = [];\n        } else {\n            this.updateSelectedTags();\n        }\n        this.log.debug(`Selected Tags: ${JSON.stringify(this.config.selectedTags)}`);\n\n        await this.library.writedp(`breakingNewsCount`, 0, genericStateObjects.breakingNewsCount);\n        const data: { news?: [NewsEntity, NewsEntity, NewsEntity, NewsEntity, NewsEntity]; newsCount: number } = {\n            newsCount: 0,\n            news: [newsDefault, newsDefault, newsDefault, newsDefault, newsDefault],\n        };\n        await this.library.writeFromJson(`news.breakingNews`, `news.breakingNews`, statesObjects, data, true, true);\n\n        // start working\n\n        if (this.config.newsEnabled) {\n            await this.updateNews();\n        } else {\n            await this.library.garbageColleting(`news.`, 60000, false);\n        }\n        if (this.config.videosEnabled) {\n            await this.updateVideos();\n        } else {\n            await this.library.garbageColleting(`videos.`, 60000, false);\n        }\n        this.update();\n\n        this.log.debug(`Breaking News!`);\n        await this.updateHomepageBreakingNews();\n\n        this.log.info('Initialize stuff completed and new news are available. Old ones too. No more text for now on.');\n    }\n\n    update(): void {\n        this.updateTimeout = this.setTimeout(async () => {\n            this.updateSelectedTags();\n            if (this.config.newsEnabled) {\n                await this.updateNews();\n            }\n            if (this.config.videosEnabled) {\n                await this.updateVideos();\n            }\n            this.update();\n        }, this.config.interval);\n    }\n\n    async updateHomepageBreakingNews(): Promise<void> {\n        // Intervall: alle 2 Minuten\n\n        try {\n            const url = 'https://www.tagesschau.de/api2u/homepage';\n            const response = await axios.get(url, {\n                headers: { 'User-Agent': 'ioBroker', accept: 'application/json' },\n            });\n            if (response.status === 200 && response.data) {\n                const homepage = response.data;\n                let breakingNews: any[] = [];\n                if (homepage.news) {\n                    breakingNews = breakingNews.concat(homepage.news.filter((n: any) => n.breakingNews === true));\n                }\n                if (homepage.regional) {\n                    breakingNews = breakingNews.concat(homepage.regional.filter((n: any) => n.breakingNews === true));\n                }\n                await this.library.writedp(\n                    `breakingNewsHomepageCount`,\n                    breakingNews.length,\n                    genericStateObjects.breakingNewsCount,\n                    undefined,\n                    undefined,\n                    undefined,\n                    true,\n                );\n                await this.library.writeFromJson(\n                    `news.breakingNewsHomepage`,\n                    `news.breakingNewsHomepage`,\n                    statesObjects,\n                    { news: breakingNews, newsCount: breakingNews.length },\n                    true,\n                    true,\n                );\n                for (let i = breakingNews.length; i < this.config.maxEntries; i++) {\n                    await this.library.garbageColleting(\n                        `news.breakingNewsHomepage.news.${`00${i}`.slice(-2)}`,\n                        60000,\n                        false,\n                    );\n                    await this.library.writedp(\n                        `news.breakingNewsHomepage.news.${`00${i}`.slice(-2)}`,\n                        undefined,\n                        newsChannel.news._array,\n                        undefined,\n                        undefined,\n                        true,\n                    );\n                }\n                if (this.warnedNotReachable) {\n                    this.log.info('Tagesschau homepage API reachable again.');\n                    this.warnedNotReachable = false;\n                }\n            }\n        } catch (e) {\n            if (this.warnedNotReachable === false) {\n                this.log.warn(`Could not reach Tagesschau homepage API: ${e instanceof Error ? e.message : String(e)}`);\n                this.warnedNotReachable = true;\n            }\n        }\n        this.homepageTimeout = this.setTimeout(async () => this.updateHomepageBreakingNews(), 2 * 60 * 1000); // alle 2 Minuten\n    }\n\n    updateSelectedTags(): void {\n        const selectedUserTags = this.config.selectedUserTags || [];\n        for (let index = 0; index < selectedUserTags.length; index++) {\n            let tempTags: typeof this.config.selectedTags = [];\n            if (selectedUserTags[index].startsWith('*') || selectedUserTags[index].endsWith('*')) {\n                if (selectedUserTags[index].endsWith('*') && selectedUserTags[index].startsWith('*')) {\n                    tempTags = this.additionalConfig.allTags.filter(tag =>\n                        tag.includes(selectedUserTags[index].slice(1, -1)),\n                    );\n                } else if (selectedUserTags[index].startsWith('*')) {\n                    tempTags = this.additionalConfig.allTags.filter(tag =>\n                        tag.endsWith(selectedUserTags[index].slice(1)),\n                    );\n                } else if (selectedUserTags[index].endsWith('*')) {\n                    tempTags = this.additionalConfig.allTags.filter(tag =>\n                        tag.startsWith(selectedUserTags[index].slice(0, -1)),\n                    );\n                }\n            }\n            if (tempTags.length > 0) {\n                this.config.selectedTags = this.config.selectedTags.concat(tempTags);\n            }\n        }\n        this.config.selectedTags = this.config.selectedTags.filter(\n            (tag, index) => this.config.selectedTags.indexOf(tag) === index,\n        );\n        this.config.selectedTags = this.config.selectedTags.filter(tag => !tag.startsWith('*') && !tag.endsWith('*'));\n    }\n    /**\n     * update news from tagesschau..\n     */\n    async updateNews(): Promise<void> {\n        const bnews: NewsEntity[] = [];\n        await this.library.writedp(`news`, undefined, statesObjects[`news` as keyof statesObjectsType]._channel);\n        try {\n            for (const topic of this.topics) {\n                const url = `https://www.tagesschau.de/api2u/news/?regions=${this.regions}&ressort=${topic}`;\n                this.log.debug(`News URL for ${topic}: ${url}`);\n                const response = await axios.get(url, { headers: { accept: 'application/json' } });\n                const start = new Date().getTime();\n                if (response.status === 200 && response.data) {\n                    //this.log.debug(`Response: ${JSON.stringify(response.data)}`);\n                    this.isOnline = true;\n                    const data = response.data as responseType;\n                    if (data.regional) {\n                        data.regional.forEach(news => {\n                            news.regional = true;\n                        });\n                        data.news = data.news ? data.news.concat(data.regional) : data.regional;\n                    }\n                    if (data.news) {\n                        for (const news of data.news) {\n                            if (news.tags) {\n                                for (const tag of news.tags) {\n                                    if (!(this.additionalConfig.allTags || []).includes(tag.tag)) {\n                                        this.additionalConfig.allTags.push(tag.tag);\n                                    }\n                                }\n                            }\n                            if (news.breakingNews) {\n                                news.jsDate = new Date(news.date).getTime();\n                                bnews.push(news);\n                            }\n                        }\n                        if (this.config.selectedTags && this.config.selectedTags.length !== 0) {\n                            data.news = data.news.filter(\n                                news => news.tags && news.tags.some(tag => this.config.selectedTags.includes(tag.tag)),\n                            );\n                        }\n                        this.receivedNews[topic] = data.news;\n                        await this.writeNews(data, topic, data.news.length);\n                    }\n                } else {\n                    this.receivedNews[topic] = [];\n                    await this.library.garbageColleting(`news.${topic}.`, 60000, false);\n                    this.log.warn(`Response status: ${response.status} response statusText: ${response.statusText}`);\n                }\n                this.log.debug(`Time to write ${topic}: ${new Date().getTime() - start}`);\n                await this.delay(50);\n            }\n            const obj = await this.getForeignObjectAsync(this.namespace);\n            if (obj) {\n                obj.native = obj.native || {};\n                obj.native.additionalConfig = this.additionalConfig;\n                await this.setForeignObject(this.namespace, obj);\n            }\n            await this.library.writedp(`breakingNewsCount`, bnews.length, genericStateObjects.breakingNewsCount);\n            await this.library.writeFromJson(\n                `news.breakingNews`,\n                `news.breakingNews`,\n                statesObjects,\n                { news: bnews, newsCount: bnews.length },\n                true,\n            );\n            for (let i = bnews.length; i < this.config.maxEntries; i++) {\n                await this.library.garbageColleting(`news.breakingNews.news.${`00${i}`.slice(-2)}`, 60000, false);\n                await this.library.writedp(\n                    `news.breakingNews.news.${`00${i}`.slice(-2)}`,\n                    undefined,\n                    newsChannel.news._array,\n                    undefined,\n                    undefined,\n                    true,\n                );\n            }\n        } catch (e) {\n            if (this.isOnline) {\n                this.log.error(`Error: ${e as string}`);\n            }\n            this.isOnline = false;\n        }\n    }\n\n    /**\n     * write news to states\n     *\n     * @param data news data\n     * @param data.news news\n     * @param data.newsCount news count\n     * @param topic topic\n     * @param totalNews total news.\n     */\n    async writeNews(\n        data: { news?: NewsEntity[] | null; newsCount?: number },\n        topic: string,\n        totalNews: number | undefined,\n    ): Promise<void> {\n        if (!data.news) {\n            return;\n        }\n        data.news = data.news.slice(0, this.config.maxEntries);\n        data.newsCount = data.news.length;\n        for (const news of data.news) {\n            for (const key of filterPartOfNews) {\n                const k = key as keyof NewsEntity;\n                delete news[k];\n            }\n            if (news.date) {\n                news.jsDate = new Date(news.date).getTime();\n            }\n\n            //this.log.debug(`News: ${JSON.stringify(news)}`);\n        }\n        // At this point we sure that the data is valid!\n        await this.library.writeFromJson(`news.${topic}`, `news.${topic}`, statesObjects, data, true);\n        await this.library.writedp(`news.lastUpdate`, new Date().getTime(), genericStateObjects.lastUpdate);\n        if (totalNews !== undefined) {\n            await this.library.writedp(`news.${topic}.totalNewsCount`, totalNews, genericStateObjects.totalNewsCount);\n        }\n        for (let i = data.news.length; i < this.config.maxEntries; i++) {\n            await this.library.garbageColleting(`news.${topic}.news.${`00${i}`.slice(-2)}`, 60000, false);\n            await this.library.writedp(\n                `news.${topic}.news.${`00${i}`.slice(-2)}`,\n                undefined,\n                newsChannel.news._array,\n                undefined,\n                undefined,\n                true,\n            );\n        }\n    }\n\n    /**\n     * update videos from tagesschau..\n     */\n    async updateVideos(): Promise<void> {\n        await this.library.writedp(`videos`, undefined, statesObjects.videos._channel);\n        const url = `https://www.tagesschau.de/api2u/channels`;\n        this.log.debug(`Videos URL: ${url}`);\n        try {\n            const response = await axios.get(url, { headers: { accept: 'application/json' } });\n            if (response.status === 200 && response.data) {\n                //this.log.debug(`Response: ${JSON.stringify(response.data)}`);\n                this.isOnline = true;\n\n                // always the same order of videos\n                const data = response.data as videosType;\n\n                const titlesSort: { pti?: string }[] = [\n                    {\n                        pti: 'tagesschau24_im_Livestream',\n                    },\n                    {\n                        pti: 'tagesschau_in_100_Sekunden',\n                    },\n                    {\n                        pti: 'tagesschau',\n                    },\n                    {\n                        pti: 'tagesschau',\n                    },\n                    {\n                        pti: 'tagesthemen',\n                    },\n                    {\n                        pti: 'tagesschau_in_Einfacher_Sprache',\n                    },\n                    {\n                        pti: 'tagesschau_mit_Gebaerdensprache',\n                    },\n                    {\n                        pti: 'tagesschau_vor_20_Jahren',\n                    },\n                ];\n\n                const newChannel: videosType['channels'] = [];\n                newChannel[0] = data.channels[0];\n                data.channels[0] = undefined;\n                //data.channels.splice(3, 1);\n                for (let i = 1; i < titlesSort.length; i++) {\n                    const index = data.channels.findIndex(c => {\n                        const element = titlesSort[i];\n                        return c && c.tracking && c.tracking[0] && c.tracking[0].pti === element.pti;\n                    });\n                    if (index === -1) {\n                        newChannel[i] = undefined;\n                        await this.library.garbageColleting(`videos.channels.${`00${i}`.slice(-2)}`, 60000, false);\n                    } else {\n                        newChannel[i] = data.channels[index];\n                        data.channels[index] = undefined;\n                    }\n                }\n\n                // unknown videos\n                for (const news of data.channels) {\n                    if (news) {\n                        newChannel.push(news);\n                    }\n                }\n                data.channels = newChannel.slice(0, this.config.maxEntries);\n                for (const news of data.channels) {\n                    if (!news) {\n                        continue;\n                    }\n                    if (news.date) {\n                        news.jsDate = new Date(news.date).getTime();\n                    }\n                    if (news.tracking) {\n                        for (const t of news.tracking) {\n                            news.length = 0;\n                            news.length = t.length ? t.length : news.length;\n                        }\n                        delete news.tracking;\n                    }\n                }\n\n                await this.library.writeFromJson(`videos`, `videos`, statesObjects, data, true);\n                await this.library.writedp('videos.lastUpdate', new Date().getTime(), genericStateObjects.lastUpdate);\n            }\n        } catch (e) {\n            if (this.isOnline) {\n                this.log.error(`Error: ${e as string}`);\n            }\n            this.isOnline = false;\n        }\n    }\n\n    /**\n     * Updates the scroll intervals for news topics.\n     *\n     * This function enables or disables the auto-scroll feature for a specific topic\n     * and updates the scroll intervals for all topics. If a topic is provided, it will\n     * specifically update the scroll interval for that topic. If no topic is provided,\n     * it will update the scroll intervals for all topics.\n     *\n     * @param topic - The news topic to update. If null, all topics will be updated.\n     * @param [val] - The value to set for the auto-scroll feature. If undefined, the current value will be used.\n     * @returns A promise that resolves when the update is complete.\n     */\n    async updateScrollIntervals(topic: string | null, val?: boolean): Promise<void> {\n        if (topic !== null && val !== undefined) {\n            await this.library.writedp(\n                `news.${topic}.autoScrollEnabled`,\n                val,\n                genericStateObjects.autoScrollEnabled,\n                true,\n            );\n        }\n\n        for (const t of this.topics) {\n            if (topic !== null && t !== topic) {\n                continue;\n            }\n            if (this.scrollIntervals[t]) {\n                this.clearInterval(this.scrollIntervals[t]);\n                this.scrollIntervals[t] = undefined;\n            }\n            if ((this.library.readdb(`news.${t}.autoScrollEnabled`) || {}).val) {\n                this.scrollIntervals[t] = this.setInterval(\n                    async () => {\n                        await this.onStateChange(`tagesschau.0.news.${t}.scrollForward`, {\n                            val: true,\n                            ack: false,\n                            ts: new Date().getTime(),\n                            lc: new Date().getTime(),\n                            from: this.namespace,\n                        });\n                    },\n                    ((this.library.readdb(`news.${t}.autoScrollInterval`) || { val: 30 }).val as number) * 1000,\n                );\n            }\n        }\n    }\n\n    /**\n     * Is called when adapter receives a message\n     *\n     * @param obj The message object\n     */\n    private onMessage(obj: ioBroker.Message): void {\n        if (typeof obj === 'object' && obj.message) {\n            if (obj.command === 'selectNewsTags') {\n                const json = this.additionalConfig.allTags.map(tag => {\n                    const r = { value: '', label: '' };\n                    r.value = tag;\n                    r.label = tag;\n                    return r;\n                });\n                json.sort((a, b) => (a.label > b.label ? 1 : -1));\n                this.sendTo(obj.from, obj.command, json, obj.callback);\n                return;\n            }\n\n            if (obj.callback) {\n                this.sendTo(obj.from, obj.command, 'Message received', obj.callback);\n            }\n        }\n    }\n\n    async onStateChange(id: string, state: ioBroker.State | null | undefined): Promise<void> {\n        if (!state || state.ack) {\n            return;\n        }\n        const parts = id.split('.');\n        if (parts.length !== 6) {\n            return;\n        }\n        const topic = parts[3];\n        // remove namespace\n        const ownId = parts.slice(2).join('.');\n        // remove namespace and command\n        const ownPath = parts.slice(2, -1).join('.');\n        switch (parts[5] as keyof typeof genericStateObjects) {\n            case 'scrollStep': {\n                await this.library.writedp(ownId, state.val, genericStateObjects.scrollStep, true);\n                break;\n            }\n            case 'scrollForward':\n            case 'scrollBackward': {\n                if (parts[4] === 'scrollForward') {\n                    await this.library.writedp(ownId, state.val, genericStateObjects.scrollForward, true);\n                    state.val =\n                        (((this.library.readdb(`${ownPath}.firstNewsAt`) || {}).val as number) || 0) +\n                        (((this.library.readdb(`${ownPath}.scrollStep`) || {}).val as number) || 0);\n                } else {\n                    await this.library.writedp(ownId, state.val, genericStateObjects.scrollBackward, true);\n                    state.val =\n                        (((this.library.readdb(`${ownPath}.firstNewsAt`) || {}).val as number) || 0) -\n                        (((this.library.readdb(`${ownPath}.scrollStep`) || {}).val as number) || 0);\n                }\n            }\n            // eslint-disable-next-line no-fallthrough\n            case 'firstNewsAt': {\n                // Is user input a number?\n                if (typeof state.val !== 'number') {\n                    if (typeof state.val === 'string') {\n                        try {\n                            state.val = parseInt(state.val);\n                            if (isNaN(state.val)) {\n                                throw new Error('Invalid number');\n                            }\n                        } catch {\n                            this.log.error(`Failed to parse state value. Number expected`);\n                            return;\n                        }\n                    } else {\n                        this.log.error(`Invalid state value. Number expected`);\n                        return;\n                    }\n                }\n                let news = this.receivedNews[topic];\n                if (news) {\n                    // is the number in the range of the news?\n                    news = this.library.cloneGenericObject(news) as NewsEntity[];\n                    state.val = Math.round(state.val);\n                    state.val = state.val % news.length;\n                    state.val = state.val < 0 ? news.length + state.val : state.val;\n                    news = news.concat(news.slice(0, state.val));\n                    const end =\n                        this.config.maxEntries + state.val > news.length\n                            ? news.length\n                            : this.config.maxEntries + state.val;\n                    news = news.slice(state.val, end);\n                    await this.writeNews({ news: news, newsCount: news.length }, topic, undefined);\n                    await this.library.writedp(\n                        `news.${topic}.controls.firstNewsAt`,\n                        state.val,\n                        genericStateObjects.firstNewsAt,\n                        true,\n                    );\n                }\n                break;\n            }\n            case 'autoScrollInterval': {\n                await this.library.writedp(\n                    ownId,\n                    ((state.val as number) || 0) < 2 ? 2 : state.val,\n                    genericStateObjects.autoScrollInterval,\n                    true,\n                );\n                await this.updateScrollIntervals(topic, undefined);\n                break;\n            }\n            case 'autoScrollEnabled': {\n                await this.updateScrollIntervals(topic, !!state.val);\n                break;\n            }\n            case 'default': {\n                this.log.error(`Why we are here? Report to developer: Command not processed! state: ${id}`);\n                break;\n            }\n        }\n    }\n\n    /**\n     * Is called when adapter shuts down - callback has to be called under any circumstances!\n     *\n     * @param callback Callback function\n     */\n    private onUnload(callback: () => void): void {\n        try {\n            this.log.info(\n                'Thanks for using this adapter. I hope you enjoyed it. I will stop now and clean up my stuff.',\n            );\n            if (this.updateTimeout) {\n                this.clearTimeout(this.updateTimeout);\n            }\n            if (this.homepageTimeout) {\n                this.clearTimeout(this.homepageTimeout);\n            }\n            for (const t in this.scrollIntervals) {\n                if (this.scrollIntervals[t]) {\n                    this.clearInterval(this.scrollIntervals[t]);\n                }\n            }\n            callback();\n        } catch {\n            callback();\n        }\n    }\n}\n\nif (require.main !== module) {\n    // Export the constructor in compact mode\n    module.exports = (options: Partial<utils.AdapterOptions> | undefined) => new Tagesschau(options);\n} else {\n    // otherwise start the instance directly\n    (() => new Tagesschau())();\n}\n\nexport = Tagesschau;\n"],
  "mappings": "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",
  "names": ["axios"]
}
